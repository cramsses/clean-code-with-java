
Step I : Understand Clarity of Code (Unit Tests)
Step II: Focus on 4 Principles of Simple Design
Step III: Get started with Refactoring
Step IV : Understand TDD


********************** SECTION 1 GETTING STARTED WITH CLEAN CODE  **********************


Download and import
	zip from github
	https://github.com/in28minutes/clean-code 
	
	import to IDE
		Existing maven project
	
----------------
Clarity of Code

	Gilded Rose Kata
	Divide the test code in three parts:
		1.- Setup	
			Refactor constants		--> Extract constant
			Refactor funtionality	--> Extract method and local variables. the inline variables.
		2.- Invoke
		3.- Verify
		
		Refactor name method
			Clear name
			Consistent nomenclature
			avoid the begining with "test" word, it is no longer necesary.
			
----------------

********************** SECTION 2 GETTING STARTED WITH 4 PRINCIPLES OF SIMPLE DESIGN  **********************

Simple Design

Why?
	Agile and ExP
		- Focus on TODAY'S Requirements
		- Change is EXPECTED
		- 
	Design vs Architecture
		- Architecture 	--> Difficult to change
		- Design		--> Esier to change
	
4 Principles
	- Run all tests
	- Minimize Duplication
	- Maximize Clarity
	- Keep it small



	
	

	
	